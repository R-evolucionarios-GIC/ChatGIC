name: Sync to Staging

# Add these permissions at the top level
permissions:
  contents: write
  pull-requests: write

on:
  push:
    branches:
      - development

jobs:
  test-and-sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Backend Steps
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install Python dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # TODO: Add tests
      # - name: Run Python tests
      #   working-directory: ./backend
      #   run: pytest

      # TODO: Add linting
      # - name: Run Python linting
      #   working-directory: ./backend
      #   run: |
      #     pip install flake8
      #     flake8 .

      # Frontend Steps
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: frontend/package.json

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Run frontend linting
        working-directory: ./frontend
        run: |
          npm run lint
          npm run format --check

      # TODO: Add tests
      # - name: Run frontend tests
      #   working-directory: ./frontend
      #   run: npm run test

      - name: Test Git permissions
        run: |
          git remote -v
          git fetch origin staging
          git branch -a
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Sync to staging
        if: success()
        run: |
          git config user.name 'GitHub Actions'
          git config user.email 'actions@github.com'
          git checkout staging
          git pull origin staging
          git merge origin/development
          git push origin staging
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
